{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "asyncAdd"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "a"
        },
        {
          "type": "Identifier",
          "name": "b"
        },
        {
          "type": "Identifier",
          "name": "__ASYNC"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [



          {
            "type": "SwitchStatement",
            "discriminant": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "spec"
              },
              "property": {
                "type": "Identifier",
                "name": "type"
              }
            },
            "cases": [
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": "integer",
                  "raw": "'integer'"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "v"
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parseInt"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": "hash",
                  "raw": "'hash'"
                },
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "v"
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "alert"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "value"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "test": null,
                "consequent": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "v"
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "alert"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Hello"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }




         ]
       }

     }
  ]
}

