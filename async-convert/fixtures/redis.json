
{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "client"
      },
      "params": [],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "GLOBALS"
                },
                "property": {
                  "type": "Identifier",
                  "name": "redisClient"
                }
              },
              "right": {
                "type": "LogicalExpression",
                "operator": "||",
                "left": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "GLOBALS"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "redisClient"
                  }
                },
                "right": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "require"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "redis",
                          "raw": "'redis'"
                        }
                      ]
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "createClient"
                    }
                  },
                  "arguments": []
                }
              }
            }
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "set"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "key"
        },
        {
          "type": "Identifier",
          "name": "value"
        },
        {
          "type": "Identifier",
          "name": "__ASYNC"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "client"
                  },
                  "arguments": []
                },
                "property": {
                  "type": "Identifier",
                  "name": "set"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "key"
                },
                {
                  "type": "Identifier",
                  "name": "value"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "err"
                    },
                    {
                      "type": "Identifier",
                      "name": "reply"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "Identifier",
                          "name": "err"
                        },
                        "consequent": {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "Identifier",
                            "name": "err"
                          }
                        },
                        "alternate": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "callback"
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                  "type": "Identifier",
                                  "name": "reply"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "OK",
                                  "raw": "'OK'"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "get"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "key"
        },
        {
          "type": "Identifier",
          "name": "__ASYNC"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "client"
                  },
                  "arguments": []
                },
                "property": {
                  "type": "Identifier",
                  "name": "get"
                }
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "key"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "err"
                    },
                    {
                      "type": "Identifier",
                      "name": "reply"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "Identifier",
                          "name": "err"
                        },
                        "consequent": {
                          "type": "ThrowStatement",
                          "argument": {
                            "type": "Identifier",
                            "name": "err"
                          }
                        },
                        "alternate": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "callback"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "reply"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "redisExample"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "__ASYNC"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "__AWAIT"
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "set"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "x"
                    },
                    {
                      "type": "Literal",
                      "value": "ahoi"
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "console.log"
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "__AWAIT"
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "get"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "x"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
